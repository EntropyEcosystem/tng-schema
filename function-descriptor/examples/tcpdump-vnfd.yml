## Copyright (c) 2015 SONATA-NFV, 2017 5GTANGO
## ALL RIGHTS RESERVED.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## Neither the name of the SONATA-NFV, 5GTANGO
## nor the names of its contributors may be used to endorse or promote
## products derived from this software without specific prior written
## permission.
##
## This work has been performed in the framework of the SONATA project,
## funded by the European Commission under Grant number 671517 through
## the Horizon 2020 and 5G-PPP programmes. The authors would like to
## acknowledge the contributions of their colleagues of the SONATA
## partner consortium (www.sonata-nfv.eu).
##
## This work has been performed in the framework of the 5GTANGO project,
## funded by the European Commission under Grant number 761493 through
## the Horizon 2020 and 5G-PPP programmes. The authors would like to
## acknowledge the contributions of their colleagues of the 5GTANGO
## partner consortium (www.5gtango.eu).

# YAML description of a tcpdump docker container
# used in the SONATA platform

---
##
## Some general information regarding this
## VNF descriptor.
##
descriptor_schema: "https://raw.githubusercontent.com/sonata-nfv/tng-schema/master/function-descriptor/vnfd-schema.yml"

vendor: "eu.sonata-nfv"
name: "tcpdump-vnf"
version: "0.2"
author: "Steven van Rossem, iMinds"
description: >
  "A first tcpdump VNF descriptor. The tcpdump
   VNF acts as a traffic sink."

##
## The virtual deployment unit.
##
virtual_deployment_units:
  - id: "vdu01"
    vm_image: "file:///docker_files/tcpdump/Dockerfile"
    vm_image_format: "docker"
    resource_requirements:
      cpu:
        vcpus: 1
      memory:
        size: 2
        size_unit: "GB"
      storage:
        size: 10
        size_unit: "GB"
    connection_points:
      - id: "cp01"
        interface: "ipv4"
        type: "internal"
      - id: "cp02"
        interface: "ipv4"
        type: "internal"
      - id: "cp03"
        interface: "ipv4"
        type: "internal"

##
## The virtual links that interconnect
## the different connections points.
##
virtual_links:
  - id: "mgmt"
    connectivity_type: "E-LAN"
    connection_points_reference:
      - "vdu01:cp01"
      - "mgmt"
  - id: "input"
    connectivity_type: "E-Line"
    connection_points_reference:
      - "vdu01:cp02"
      - "input"
  - id: "output"
    connectivity_type: "E-Line"
    connection_points_reference:
      - "vdu01:cp03"
      - "output"

##
## The VNF connection points to the 
## outside world.
##
connection_points:
  - id: "mgmt"
    interface: "ipv4"
    type: "management"
  - id: "input"
    interface: "ipv4"
    type: "external"
  - id: "output"
    interface: "ipv4"
    type: "external"
